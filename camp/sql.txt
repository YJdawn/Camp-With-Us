
-- sys 에 가서 계정하나 만드세요  campwithus ----
ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;
CREATE USER campwithus IDENTIFIED BY 1234;
GRANT CONNECT, RESOURCE TO campwithus;
-- 객체가 생성될 수 있는 공간 할당량 지정
ALTER USER campwithus DEFAULT TABLESPACE SYSTEM QUOTA UNLIMITED ON SYSTEM;


---------------1  MEMBER TABLE ----------
CREATE TABLE "MEMBER" (                     
"MEMBER_NO" NUMBER PRIMARY KEY ,
"MEMBER_EMAIL" VARCHAR2(50) NOT NULL,
"MEMBER_PW" VARCHAR2(1000),
"MEMBER_NICK" VARCHAR2(30) NOT NULL,
"MEMBER_TEL" CHAR(11),
"MEMBER_ADDR" VARCHAR2(500),
"PROFILE_IMG" VARCHAR2(200),
"ENROLL_DT" DATE DEFAULT SYSDATE,
"SECESSION_FL" CHAR(1) DEFAULT 'N' NOT NULL,
"LOGIN_ST" CHAR(1) DEFAULT 'N' NOT NULL,
"MANAGER" CHAR(1) DEFAULT 'N' NOT NULL
);

CREATE SEQUENCE SEQ_MEMBER_NO;   -- 시퀀스 생성

INSERT INTO MEMBER VALUES (       -- 테스트 Insert
 SEQ_MEMBER_NO.NEXTVAL , 'test@test.com' , 'test', '테스트', '01011111111','04540, 서울시 중구',
 NULL , DEFAULT , DEFAULT , DEFAULT , DEFAULT
);

SELECT * FROM MEMBER;

----------------2   리뷰 테이블------------------------------------------------------------           
CREATE TABLE "REVIEW" (
    "REVIEW_NO" NUMBER PRIMARY KEY,
    "REVIEW_CONTENT" VARCHAR2(1000) NOT NULL,
    "REVIEW_ST" CHAR(1) DEFAULT 'N' CHECK ("REVIEW_ST" IN ('Y','N')),
    "CREATE_DT" DATE DEFAULT SYSDATE NOT NULL,
    "MEMBER_NO" NUMBER REFERENCES MEMBER,
    "CAMP_NO" NUMBER,
    "CAMP_RATE" NUMBER NOT NULL,
    "CAMP_NAME" VARCHAR2(100) NOT NULL
);

COMMENT ON COLUMN "REVIEW"."REVIEW_NO" IS '리뷰 번호';
COMMENT ON COLUMN "REVIEW"."REVIEW_CONTENT" IS '리뷰 내용';
COMMENT ON COLUMN "REVIEW"."REVIEW_ST" IS '리뷰 상태';   
COMMENT ON COLUMN "REVIEW"."CREATE_DT" IS '리뷰 작성일';
COMMENT ON COLUMN "REVIEW"."MEMBER_NO" IS '회원 번호';
COMMENT ON COLUMN "REVIEW"."CAMP_NO" IS '캠핑장 번호';
COMMENT ON COLUMN "REVIEW"."CAMP_RATE" IS '별점';

DROP SEQUENCE SEQ_REVIEW_NO;  -- 기존 시퀀스 삭제

CREATE SEQUENCE SEQ_REVIEW_NO; -- 댓글 번호 시퀀스

INSERT INTO REVIEW VALUES(SEQ_REVIEW_NO.NEXTVAL, '리뷰1', DEFAULT, DEFAULT, 1, 10, 1,'(주)아웃오브파크');
INSERT INTO REVIEW VALUES(SEQ_REVIEW_NO.NEXTVAL, '리뷰2', DEFAULT, DEFAULT, 1, 10, 2,'(주)아웃오브파크');
INSERT INTO REVIEW VALUES(SEQ_REVIEW_NO.NEXTVAL, '리뷰3', DEFAULT, DEFAULT, 1, 10, 3,'(주)아웃오브파크');
INSERT INTO REVIEW VALUES(SEQ_REVIEW_NO.NEXTVAL, '리뷰4', DEFAULT, DEFAULT, 1, 10, 4,'(주)아웃오브파크');
INSERT INTO REVIEW VALUES(SEQ_REVIEW_NO.NEXTVAL, '리뷰5', DEFAULT, DEFAULT, 1, 10, 5,'(주)아웃오브파크');

COMMIT;

SELECT * FROM review;
--------------- 3333  RESERVATION 예약  TABLE -----------------------------------------------------------------------------------

-- RESERVATION 시퀀스 생성
CREATE SEQUENCE SEQ_RESERVATION_NO_S;

CREATE TABLE "RESERVATION" (
"RESERVATION_NO"  NUMBER PRIMARY KEY,
"CAMPING_NM"      VARCHAR2(100) NOT NULL,
"RESERVATION_P"   VARCHAR2(100) NOT NULL,
"RESERVATION_DT"  DATE DEFAULT SYSDATE NOT NULL,
"RESERVATION_NP"  NUMBER,
"PAYMENT"         NUMBER NOT NULL,
"SELECTDATE"      VARCHAR2(50) NOT NULL,
"RESERVATION_ST"  CHAR(1) DEFAULT 'Y',
"MEMBER_NO"       NUMBER REFERENCES MEMBER            --<< 추가
);

ALTER TABLE RESERVATION ADD PAYMETHOD VARCHAR2(50);  -- 결제방식 추가
COMMIT;
SELECT * FROM RESERVATION;
--------------------------------------------- 44444 캠핑장가격, PRICE 테이블 입니다. ------------------------------------------------------------

-- PRICE테이블 시퀀스 생성
CREATE SEQUENCE SEQ_CAMPING_CD_S NOCACHE;


CREATE TABLE "PRICE" (
"CAMPING_CD" NUMBER NOT NULL,
"CAMPING_PR" NUMBER NOT NULL,
"PEAK_SEASON" CHAR(1) NOT NULL
)

INSERT INTO PRICE VALUES(SEQ_CAMPING_CD_S.NEXTVAL,
30000, 'Y');
INSERT INTO PRICE VALUES(SEQ_CAMPING_CD_S.NEXTVAL,
20000, 'N');

---------------------------------------------55555 게시판 테이블 입니다, 위에서부터 순서대로 진행하세요--------------------------------------------------------------------------------------------------


-- 보드테이블 만들기
CREATE TABLE "BOARD_TYPE" (
   "BOARD_CD"   NUMBER   PRIMARY KEY,
   "BOARD_NM"   VARCHAR2(50)   NOT NULL
);

COMMENT ON COLUMN "BOARD_TYPE"."BOARD_CD" IS '게시판 코드';
COMMENT ON COLUMN "BOARD_TYPE"."BOARD_NM" IS '게시판 이름';


-- 게시판(게시글 저장 테이블)
CREATE TABLE "BOARD" (
   "BOARD_NO"   NUMBER      NOT NULL,
   "BOARD_TITLE"   VARCHAR2(150)      NOT NULL,
   "BOARD_CONTENT"   VARCHAR2(4000)      NOT NULL,
   "CREATE_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
   "UPDATE_DT"   DATE      NOT NULL,
   "READ_COUNT"   NUMBER   DEFAULT 0   NOT NULL,
   "BOARD_ST"   CHAR(1)   DEFAULT 'N'   NOT NULL,
   "MEMBER_NO"   NUMBER      NOT NULL,
   "BOARD_CD"   NUMBER      NOT NULL
);

COMMENT ON COLUMN "BOARD"."BOARD_NO" IS '게시글 번호(시퀀스)';
COMMENT ON COLUMN "BOARD"."BOARD_TITLE" IS '게시글 제목';
COMMENT ON COLUMN "BOARD"."BOARD_CONTENT" IS '게시글 내용';
COMMENT ON COLUMN "BOARD"."CREATE_DT" IS '작성일';
COMMENT ON COLUMN "BOARD"."UPDATE_DT" IS '마지막 수정일';
COMMENT ON COLUMN "BOARD"."READ_COUNT" IS '조회수';
COMMENT ON COLUMN "BOARD"."BOARD_ST" IS '게시글 상태(정상N, 삭제Y)';
COMMENT ON COLUMN "BOARD"."MEMBER_NO" IS '작성자 회원 번호';
COMMENT ON COLUMN "BOARD"."BOARD_CD" IS '게시판 코드';

-- BOARD 테이블 제약조건 추가
ALTER TABLE BOARD
ADD PRIMARY KEY(BOARD_NO); -- 제약 조건명 생략(SYS_XXXXX)

ALTER TABLE BOARD
ADD CONSTRAINT "FK_BOARD_CD" -- 제약 조건명 지정
FOREIGN KEY("BOARD_CD") -- BOARD의 BOARD_CODE 컬럼에 FK 지정
REFERENCES "BOARD_TYPE"; -- 참조할 테이블

ALTER TABLE BOARD
ADD CONSTRAINT "CHK_BOARD_ST"
CHECK ("BOARD_ST" IN ('N', 'Y'));

-- UPDATE_DT  NULL 허용
ALTER TABLE "BOARD"
MODIFY "UPDATE_DT" NULL;


-- BOARD_NO용 시퀀스
CREATE SEQUENCE SEQ_BOARD_NO;

-- 프로젝트용 BOARD_TYPE 데이터 삽입
INSERT INTO BOARD_TYPE VALUES(1, '캠핑장 추천');
INSERT INTO BOARD_TYPE VALUES(2, '캠핑 나눔');
INSERT INTO BOARD_TYPE VALUES(3, '캠핑 꿀팁');
INSERT INTO BOARD_TYPE VALUES(4, '공지사항');
INSERT INTO BOARD_TYPE VALUES(5, '문의사항');

SELECT * FROM BOARD_TYPE;

-- BOARD 테이블 샘플 데이터 삽입(PL/SQL)
BEGIN
   FOR I IN 1..30 LOOP
      INSERT INTO BOARD 
      VALUES( SEQ_BOARD_NO.NEXTVAL,
              SEQ_BOARD_NO.CURRVAL || '번째 게시글',
              SEQ_BOARD_NO.CURRVAL || '번째 게시글 내용 입니다.',
              DEFAULT, DEFAULT, DEFAULT, DEFAULT, 1, 3
      );
   END LOOP;
END;

SELECT * FROM BOARD;
COMMIT;

-- 제약조건 추가 (BOARD -> MEMBER)      ?? SKIP
ALTER TABLE BOARD
ADD CONSTRAINT FK_BOARD_MEMBER
FOREIGN KEY(MEMBER_NO)
REFERENCES MEMBER
ON DELETE SET NULL;


----------------------------------------- 666666 PLACE_RECOMMEND ---테이블(여행지 추천 테이블) 입니다.    ------------

-- PLACE_RECOMMEND 테이블(여행지 추천 테이블)
-- 여행지 번호, 제목, 내용, 이미지, 홈페이지링크
CREATE TABLE "PLACE_RECOMMEND"(
   "RECOMMEND_NO" NUMBER PRIMARY KEY,
   "RECOMMEND_TITLE" VARCHAR2(150) NOT NULL,
   "RECOMMEND_CONTENT" VARCHAR2(4000) NOT NULL,
   "RECOMMEND_IMG" VARCHAR2(200) NOT NULL,
   "RECOMMEND_HOMEPG" VARCHAR2(50) NOT NULL
);


COMMENT ON COLUMN "PLACE_RECOMMEND"."RECOMMEND_NO" IS '여행지 번호(시퀀스)';
COMMENT ON COLUMN "PLACE_RECOMMEND"."RECOMMEND_TITLE" IS '제목';
COMMENT ON COLUMN "PLACE_RECOMMEND"."RECOMMEND_CONTENT" IS '내용';
COMMENT ON COLUMN "PLACE_RECOMMEND"."RECOMMEND_IMG" IS '이미지';
COMMENT ON COLUMN "PLACE_RECOMMEND"."RECOMMEND_HOMEPG" IS '홈페이지';


-- RECOMMEND_NO용 시퀀스
-- DROP SEQUENCE SEQ_RECOMMEND_NO;

CREATE SEQUENCE SEQ_RECOMMEND_NO;


-- PLACE_RECOMMEND 테이블 샘플 데이터 삽입(PL/SQL)
-- 샘플 데이터 얻어 온 링크
-- https://conlab.visitkorea.or.kr/conlab/search-result/formal?cid=mADJkA&defaultCid=mADJkA&keyword=%EC%97%AC%ED%96%89%EC%A7%80&searchType=Formal&page=2&lang=%ED%95%9C%EA%B5%AD%EC%96%B4&sortDirection=%EC%B5%9C%EC%8B%A0%EC%88%9C
BEGIN
   FOR I IN 1..15 LOOP
      INSERT INTO PLACE_RECOMMEND 
      VALUES( SEQ_RECOMMEND_NO.NEXTVAL,
              SEQ_RECOMMEND_NO.CURRVAL || '번째 제목',
              SEQ_RECOMMEND_NO.CURRVAL || '번째 내용 입니다.',
              '/resources/images/board/semiwon.jpg', 'http://www.semiwon.or.kr/'
      );
   END LOOP;
END;
/



---------------------------------777  REPLY 테이블 생성 ---------------------------------------------


-- 댓글 테이블           
CREATE TABLE "REPLY" (
    "REPLY_NO"   NUMBER      PRIMARY KEY,
    "REPLY_CONTENT"   VARCHAR2(1000)      NOT NULL,
    "REPLY_ST"   CHAR(1) DEFAULT 'N' CHECK ("REPLY_ST" IN ('Y','N')),
    "CREATE_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
    "MEMBER_NO"   NUMBER   REFERENCES MEMBER,
    "BOARD_NO"   NUMBER   REFERENCES BOARD,
    "PARENT_REPLY_NO" NUMBER REFERENCES REPLY
);

COMMENT ON COLUMN "REPLY"."REPLY_NO" IS '댓글 번호';
COMMENT ON COLUMN "REPLY"."REPLY_CONTENT" IS '댓글 내용';
COMMENT ON COLUMN "REPLY"."REPLY_ST" IS '댓글 상태';   
COMMENT ON COLUMN "REPLY"."CREATE_DT" IS '댓글 작성일';
COMMENT ON COLUMN "REPLY"."MEMBER_NO" IS '회원 번호';
COMMENT ON COLUMN "REPLY"."BOARD_NO" IS '게시글 번호';
COMMENT ON COLUMN "REPLY"."PARENT_REPLY_NO" IS '부모 댓글 번호';        


CREATE SEQUENCE SEQ_RNO; -- 댓글 번호 시퀀스


INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모1', DEFAULT, DEFAULT, 1, 30, NULL);
INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모1-자식1', DEFAULT, DEFAULT, 1, 30, 1);
INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모1-자식2', DEFAULT, DEFAULT, 1, 30, 1);
INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모1-자식3', DEFAULT, DEFAULT, 1,30, 1);

INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모2', DEFAULT, DEFAULT, 1, 30, NULL);
INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모3', DEFAULT, DEFAULT, 1, 30, NULL);
INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모4', DEFAULT, DEFAULT, 1, 30, NULL);

INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모2-자식1', DEFAULT, DEFAULT, 1, 30, 5);
INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모2-자식2', DEFAULT, DEFAULT, 1, 30, 5);
INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모2-자식3', DEFAULT, DEFAULT, 1, 30, 5);

INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모1-자식3-손자1', DEFAULT, DEFAULT, 1, 30, 4);
INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모1-자식3-손자2', DEFAULT, DEFAULT, 1, 30, 4);
INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '부모1-자식3-손자3', DEFAULT, DEFAULT, 1, 30, 4);

INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL, '대댓글테스트', DEFAULT, DEFAULT, 1, 30, 14);
COMMIT;

SELECT * FROM reply;

