------------------------------------------------------------ 리뷰 테이블------------------------------------------------------------           
CREATE TABLE "REPLY_C" (
    "REPLY_NO"   NUMBER      PRIMARY KEY,
    "REPLY_CONTENT"   VARCHAR2(1000)      NOT NULL,
    "REPLY_ST"   CHAR(1) DEFAULT 'N' CHECK ("REPLY_ST" IN ('Y','N')),
    "CREATE_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
    "MEMBER_NO"   NUMBER   REFERENCES MEMBER_S,
    "BOARD_NO"   NUMBER, -- 캠핑장 contentId
	"CAMP_RATE" NUMBER NOT NULL
);

COMMENT ON COLUMN "REPLY_C"."REPLY_NO" IS '리뷰 번호';
COMMENT ON COLUMN "REPLY_C"."REPLY_CONTENT" IS '리뷰 내용';
COMMENT ON COLUMN "REPLY_C"."REPLY_ST" IS '리뷰 상태';   
COMMENT ON COLUMN "REPLY_C"."CREATE_DT" IS '리뷰 작성일';
COMMENT ON COLUMN "REPLY_C"."MEMBER_NO" IS '회원 번호';
COMMENT ON COLUMN "REPLY_C"."BOARD_NO" IS '캠핑장 번호';
COMMENT ON COLUMN "REPLY_C"."CAMP_RATE" IS '별점';

DROP SEQUENCE SEQ_REPLY_NO_C;

CREATE SEQUENCE SEQ_REPLY_NO_C; -- 댓글 번호 시퀀스
--CREATE SEQUENCE SEQ_REPLY_REPLY_NO_C; -- 답글 번호 시퀀스

INSERT INTO REPLY_C VALUES(SEQ_REPLY_NO_C.NEXTVAL, '리뷰1', DEFAULT, DEFAULT, 1, 10, 1);
INSERT INTO REPLY_C VALUES(SEQ_REPLY_NO_C.NEXTVAL, '리뷰2', DEFAULT, DEFAULT, 1, 10, 2);
INSERT INTO REPLY_C VALUES(SEQ_REPLY_NO_C.NEXTVAL, '리뷰3', DEFAULT, DEFAULT, 1, 10, 3);
INSERT INTO REPLY_C VALUES(SEQ_REPLY_NO_C.NEXTVAL, '리뷰4', DEFAULT, DEFAULT, 1, 10, 4);
INSERT INTO REPLY_C VALUES(SEQ_REPLY_NO_C.NEXTVAL, '리뷰5', DEFAULT, DEFAULT, 1, 10, 5);


--------------------------------------------------MEMBER_S 멤버 ,  RESERVATION 예약  TABLE -----------------------------------------------------------------------------------



CREATE TABLE "MEMBER_S" (                           -- 기존 MEMBER_S 테이블입니다. 기존 시퀀스나 그대로 사용합니다. 본인 DB 에 맞는지 확인하세요
"MEMBER_NO" NUMBER PRIMARY KEY ,
"MEMBER_EMAIL" VARCHAR2(50) NOT NULL,
"MEMBER_PW" VARCHAR2(50),
"MEMBER_NICK" VARCHAR2(30) NOT NULL,
"MEMBER_TELL" CHAR(11),
"MEMBER_ADDR" VARCHAR2(500),
"PROFILE_IMG" VARCHAR2(200),
"ENROLL_DT" DATE DEFAULT SYSDATE,
"SECESSION_FL" CHAR(1) DEFAULT 'N' NOT NULL,
"LOGIN_ST" CHAR(1) DEFAULT 'N' NOT NULL
)


--DROP TABLE "RESERVATION";                          --<< DROP 하시고 새로 CREATE 하세요.
--예약정보테이블 입니다.
--기존 테이블에서 MEMBER_NO 를 추가하였습니다.
--앞으로 조회시 MEMBER_NO 로 조회해주세요,

CREATE TABLE "RESERVATION" (
"RESERVATION_NO"  NUMBER PRIMARY KEY,
"CAMPING_NM"      VARCHAR2(100) NOT NULL,
"RESERVATION_P"   VARCHAR2(100) NOT NULL,
"RESERVATION_DT"  DATE DEFAULT SYSDATE NOT NULL,
"RESERVATION_NP"  NUMBER,
"PAYMENT"         NUMBER NOT NULL,
"SELECTDATE"      VARCHAR2(50) NOT NULL,
"RESERVATION_ST"  CHAR(1) DEFAULT 'Y',
"MEMBER_NO"       NUMBER REFERENCES MEMBER_S            --<< 추가
)


---------------------------------------------캠핑장가격, PRICE 테이블 입니다. ------------------------------------------------------------


CREATE TABLE "PRICE" (
"CAMPING_CD" NUMBER NOT NULL,
"CAMPING_PR" NUMBER NOT NULL,
"PEAK_SEASON" CHAR(1) NOT NULL
)


---------------------------------------------게시판 테이블 입니다, 위에서부터 순서대로 진행하세요--------------------------------------------------------------------------------------------------


-- 보드테이블 만들기

-- 강제삭제
DROP TABLE BOARD_TYPE CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;


-- 게시판 종류
DROP TABLE "BOARD_TYPE";

CREATE TABLE "BOARD_TYPE" (
   "BOARD_CD"   NUMBER   PRIMARY KEY,
   "BOARD_NM"   VARCHAR2(50)   NOT NULL
);


COMMENT ON COLUMN "BOARD_TYPE"."BOARD_CD" IS '게시판 코드';
COMMENT ON COLUMN "BOARD_TYPE"."BOARD_NM" IS '게시판 이름';



-- 게시판(게시글 저장 테이블)
DROP TABLE "BOARD";

CREATE TABLE "BOARD" (
   "BOARD_NO"   NUMBER      NOT NULL,
   "BOARD_TITLE"   VARCHAR2(150)      NOT NULL,
   "BOARD_CONTENT"   VARCHAR2(4000)      NOT NULL,
   "CREATE_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
   "UPDATE_DT"   DATE      NOT NULL,
   "READ_COUNT"   NUMBER   DEFAULT 0   NOT NULL,
   "BOARD_ST"   CHAR(1)   DEFAULT 'N'   NOT NULL,
   "MEMBER_NO"   NUMBER      NOT NULL,
   "BOARD_CD"   NUMBER      NOT NULL
);


COMMENT ON COLUMN "BOARD"."BOARD_NO" IS '게시글 번호(시퀀스)';
COMMENT ON COLUMN "BOARD"."BOARD_TITLE" IS '게시글 제목';
COMMENT ON COLUMN "BOARD"."BOARD_CONTENT" IS '게시글 내용';
COMMENT ON COLUMN "BOARD"."CREATE_DT" IS '작성일';
COMMENT ON COLUMN "BOARD"."UPDATE_DT" IS '마지막 수정일';
COMMENT ON COLUMN "BOARD"."READ_COUNT" IS '조회수';
COMMENT ON COLUMN "BOARD"."BOARD_ST" IS '게시글 상태(정상N, 삭제Y)';
COMMENT ON COLUMN "BOARD"."MEMBER_NO" IS '작성자 회원 번호';
COMMENT ON COLUMN "BOARD"."BOARD_CD" IS '게시판 코드';

-- BOARD 테이블 제약조건 추가
ALTER TABLE BOARD
ADD PRIMARY KEY(BOARD_NO); -- 제약 조건명 생략(SYS_XXXXX)

ALTER TABLE BOARD
ADD CONSTRAINT "FK_BOARD_CD" -- 제약 조건명 지정
FOREIGN KEY("BOARD_CD") -- BOARD의 BOARD_CODE 컬럼에 FK 지정
REFERENCES "BOARD_TYPE"; -- 참조할 테이블

ALTER TABLE BOARD
ADD CONSTRAINT "CHK_BOARD_ST"
CHECK ("BOARD_ST" IN ('N', 'Y'));

-- UPDATE_DT  NULL 허용
ALTER TABLE "BOARD"
MODIFY "UPDATE_DT" NULL;



-- BOARD_NO용 시퀀스
DROP SEQUENCE SEQ_BOARD_NO;

CREATE SEQUENCE SEQ_BOARD_NO;


-- 프로젝트용 BOARD_TYPE 데이터 삽입
INSERT INTO BOARD_TYPE VALUES(1, '캠핑장 추천');
INSERT INTO BOARD_TYPE VALUES(2, '캠핑 나눔');
INSERT INTO BOARD_TYPE VALUES(3, '캠핑 꿀팁');
INSERT INTO BOARD_TYPE VALUES(4, '공지사항');
INSERT INTO BOARD_TYPE VALUES(5, '문의사항');

SELECT * FROM BOARD_TYPE;


-- BOARD 테이블 샘플 데이터 삽입(PL/SQL)
BEGIN
   FOR I IN 1..500 LOOP
      INSERT INTO BOARD 
      VALUES( SEQ_BOARD_NO.NEXTVAL,
              SEQ_BOARD_NO.CURRVAL || '번째 게시글',
              SEQ_BOARD_NO.CURRVAL || '번째 게시글 내용 입니다.',
              DEFAULT, DEFAULT, DEFAULT, DEFAULT, 1, 3
      );
   END LOOP;
END;
/

SELECT * FROM MEMBER;

-- 캠핑장 추천 게시판 조회
SELECT COUNT(*) FROM BOARD WHERE BOARD_CD = 1;

-- 캠핑 나눔 게시판 조회
SELECT COUNT(*) FROM BOARD WHERE BOARD_CD = 2;

COMMIT;



-- 1번 회원이 작성하지않은 테이블 삭제
DELETE FROM BOARD
WHERE MEMBER_NO != 1;


-- 제약조건 추가 (BOARD -> MEMBER_S)
ALTER TABLE BOARD
ADD CONSTRAINT FK_BOARD_MEMBER_S
FOREIGN KEY(MEMBER_NO)
REFERENCES MEMBER_S
ON DELETE SET NULL;


ALTER TABLE BOARD_IMG
DROP CONSTRAINT SYS_C007142;


ALTER TABLE BOARD_IMG
ADD CONSTRAINT FK_BOARD_BOARD_IMG
FOREIGN KEY(BOARD_NO)
REFERENCES BOARD
ON DELETE SET NULL;


DELETE FROM BOARD_IMG
WHERE BOARD_NO NOT IN(
    SELECT BOARD_NO FROM BOARD
);


-- BOARD 테이블 샘플데이터
INSERT INTO BOARD VALUES(
    SEQ_BOARD_NO.NEXTVAL, '스프링 테스트', '테스트 내용 입니다.', 
    DEFAULT, DEFAULT, DEFAULT, DEFAULT, 1, 1
);



-- 추가해주세요!
-- BOARD 테이블의 MEMBER_NO FK 연결 추가
ALTER TABLE BOARD
ADD CONSTRAINT "FK_BOARD_MEMBER" 
FOREIGN KEY("MEMBER_NO")
REFERENCES MEMBER;



-- 게시판 이름 조회
SELECT BOARD_NM FROM BOARD_TYPE 
WHERE BOARD_CD = 2;


-- 특정 게시판의 전체 게시글 수 조회
-- (단, 삭제글은 제외)
SELECT COUNT(*) FROM BOARD
WHERE BOARD_ST = 'N'
AND BOARD_CD = 3;



-- 게시글 상세 조회
SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
TO_CHAR(CREATE_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') CREATE_DT,
TO_CHAR(UPDATE_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') UPDATE_DT,
READ_COUNT, MEMBER_NICK, PROFILE_IMG, MEMBER_NO, BOARD_NM
FROM BOARD
JOIN MEMBER USING(MEMBER_NO)
JOIN BOARD_TYPE USING(BOARD_CD)
WHERE BOARD_NO = 500
AND BOARD_ST = 'N';


















